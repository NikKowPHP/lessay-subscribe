// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Onboarding {
  id                      String   @id @default(cuid())
  userId                  Int      @unique
  user                    User     @relation(fields: [userId], references: [id])
  steps                   Json
  completed               Boolean  @default(false)
  learningPurpose         String?
  nativeLanguage          String?
  targetLanguage          String?
  proficiencyLevel        ProficiencyLevel?
  initialAssessmentCompleted Boolean @default(false)
  lessonGenerationStatus  LessonGenerationStatus?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@map("onboarding")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  onboarding Onboarding?
  assessmentLessons AssessmentLesson[]
}

enum ProficiencyLevel {
  beginner
  intermediate
  advanced
}

enum LessonGenerationStatus {
  pending
  completed
  failed
}

model AssessmentLesson {
  id        String   @id @default(cuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  step      Int
  prompt    String
  modelAnswer String
  userResponse String?
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("assessment_lessons")
}